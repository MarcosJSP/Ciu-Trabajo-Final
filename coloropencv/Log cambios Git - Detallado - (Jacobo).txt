-- Cambios en el comit --
:::::: Commits 14/06/22020 ::::::
Weapon:
-> Weapons es un creador de balas únicamente y ya no contiene una lista de todas las balas que ha creado.

Bullet:
-> A las balas se les pasa una referencia de la nave que las ha disparado.
--> Con esta referencia se arreglan las colisiones de las balas que no se contemplaban
    cuando la nave que las disparaba había sido destruida.

ColorOpenCV (main):
-> la comprobación de quien es el dueño de la bala no se realiza mediante el arrayList
  de balas del objetoWeapon sino mediante la referencia pasada a cada bala

:::::: Commits 16/06/22020 ::::::
colorOpenCV (main):
-> Implementamos Threads para definir el funcionamiento de los hilos
-> Ahora el control de objetos esta dentro del método objectController que es llamado
    desde run() por cada hilo.
-> Se procesan los objetos del espacio de objetos (GameObject.listaObjetos) mediante
    hilos gracias ThreadPool y Executor
-> Show() es llamado solamente por el hilo principal (sino sufre problemas con processing)
-> Añadida rutina a objectController para manejar la cadencia de los disparos

GameObject:
-> Creada la clase synchronizedGameObjectList que contiene una lista ArrayList y las
  operaciones empleadas en la misma pero de manera sincronizada para evitar conflictos
  de los hilos, este ArrayList es el empleado para almacenar todos los objetos del juego
  que se muestran

Weapon:
-> Añadido los atributos frequecyShoot (indica la frecuencia de los disparos) y
  internalTimer (empleado en los calculos del timing del disparo)
-> Añadido un constructor que permite crear las armas con una frecuencia de disparos
-> Añadido un setter para frequencyShoot

Ship:
 -> Modificado el método setWeapon para que permite pasarle a Weapon la cadencia
 de disparo
